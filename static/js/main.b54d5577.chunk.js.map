{"version":3,"sources":["App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","stores/PeopleContext.tsx","components/PersonLink.tsx","components/Loader/PeopleTable.tsx","components/Loader/Loader.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["App","getLinkClass","isActive","cn","useLocation","pathname","to","className","role","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleContext","React","createContext","peoplE","loading","messageNotHasPeople","errorMessage","loadPeople","PeopleProvider","children","useState","setPeoplE","setLoading","setErrorMessage","setMessageNotHasPeople","value","people","length","catch","finally","Provider","PersonLink","person","slugPerson","useParams","slug","motherName","fatherName","name","sex","born","died","useContext","mother","find","pErson","father","parrentLink","parrent","PeopleTable","map","Loader","PersonPage","useEffect","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b54d5577.chunk.js","sourcesContent":["import {\n  NavLink,\n  Navigate,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const App = () => {\n  const getLinkClass = ({ isActive }:{ isActive: boolean }) => {\n    return cn('navbar-item', { 'has-background-grey-lighter': isActive });\n  };\n\n  const location = useLocation();\n  const isHome = location.pathname === '/home';\n\n  if (isHome) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={getLinkClass} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getLinkClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","export const NotFoundPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\n\nexport const PeopleContext = React.createContext({\n  peoplE: [] as Person[],\n  loading: false,\n  messageNotHasPeople: '',\n  errorMessage: '',\n  loadPeople: async () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [peoplE, setPeoplE] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [messageNotHasPeople, setMessageNotHasPeople] = useState('');\n\n  const loadPeople = () => {\n    setErrorMessage('');\n\n    setLoading(true);\n\n    return getPeople()\n      .then((people: Person[]) => {\n        setPeoplE(people);\n\n        if (!people.length) {\n          setMessageNotHasPeople('There are no people on the server');\n        }\n      })\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setLoading(false));\n  };\n\n  const value = {\n    peoplE,\n    loading,\n    messageNotHasPeople,\n    errorMessage,\n    loadPeople,\n  };\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport { useContext } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PeopleContext } from '../stores/PeopleContext';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  const { slugPerson } = useParams();\n  const {\n    slug,\n    motherName,\n    fatherName,\n    name,\n    sex,\n    born,\n    died,\n  } = person;\n  const { peoplE } = useContext(PeopleContext);\n  const mother = peoplE.find((pErson) => pErson.name === motherName);\n  const father = peoplE.find((pErson) => pErson.name === fatherName);\n\n  const parrentLink = (parrent: Person | null) => {\n    return (\n      <Link\n        to={`/people/${parrent?.slug}`}\n        className={cn({ 'has-text-danger': parrent?.sex === 'f' })}\n      >\n        {parrent?.name}\n      </Link>\n    );\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slugPerson === slug })}\n    >\n      <td>\n        <Link\n          className={cn({ 'has-text-danger': sex === 'f' })}\n          to={`/people/${slug}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {mother ? (parrentLink(mother)) : (motherName || '-')}\n      </td>\n\n      <td>\n        {father ? (parrentLink(father)) : (fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable:React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          people.map((person) => (\n            <PersonLink key={person.slug} person={person} />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useContext, useEffect } from 'react';\nimport { PeopleTable } from '../components/Loader/PeopleTable';\nimport { PeopleContext } from '../stores/PeopleContext';\nimport { Loader } from '../components/Loader';\n\nexport const PersonPage = () => {\n  const {\n    peoplE,\n    loading,\n    messageNotHasPeople,\n    errorMessage,\n    loadPeople,\n  } = useContext(PeopleContext);\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {\n            messageNotHasPeople && (\n              <p data-cy=\"noPeopleMessage\">\n                {messageNotHasPeople}\n              </p>\n            )\n          }\n\n          {errorMessage && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              {errorMessage}\n            </p>\n          )}\n\n          {\n            !loading && !messageNotHasPeople && !errorMessage && (\n              <PeopleTable people={peoplE} />\n            )\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Route, HashRouter as Router, Routes } from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PersonPage } from './pages/PeoplePage';\nimport { PeopleProvider } from './stores/PeopleContext';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <PeopleProvider>\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<HomePage />} />\n\n            <Route path=\"people\">\n              <Route index element={<PersonPage />} />\n              <Route path=\":slugPerson\" element={<PersonPage />} />\n            </Route>\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Route>\n        </Routes>\n      </PeopleProvider>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}